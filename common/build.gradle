//判断是否单独打包运行
def isModule = rootProject.ext.isModule.toBoolean() == true
//if (isModule) {
//    apply plugin: 'com.android.application'
//} else {
apply plugin: 'com.android.library'
//}
apply plugin: 'kotlin-android'

apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
//        if (isModule){
//            applicationId "com.drwang.mvvmsample.common"
//        }
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versioncode
        versionName rootProject.ext.android.versionName
        //ARouter配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    api "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    api 'androidx.core:core-ktx:1.2.0'
    api 'androidx.appcompat:appcompat:1.1.0'
    api 'com.google.android.material:material:1.1.0'
    api 'androidx.constraintlayout:constraintlayout:+'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    api "org.jetbrains.anko:anko-commons:0.10.5"
    api 'com.squareup.retrofit2:retrofit:2.9.0'
    api 'com.squareup.retrofit2:converter-gson:2.9.0'
    api 'com.squareup.okhttp3:okhttp:4.9.0'
    api 'androidx.appcompat:appcompat:1.1.0'
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    //                                       👇 依赖协程核心库
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines"
    //                                       👇 依赖当前平台所对应的平台库
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines"
    api 'androidx.multidex:multidex:2.0.1'
    api 'com.github.zhaokaiqiang.klog:library:1.6.0'
    api rootProject.ext.dependencies.arouterApi
    // 使用kapt插件
    kapt rootProject.ext.dependencies.arouterCompiler
    api rootProject.ext.dependencies.mmkv
    api rootProject.ext.dependencies.bottomNavigationViewEx
    api rootProject.ext.dependencies.eventBus
    api 'com.jeremyliao:live-event-bus-x:1.7.3'
    def room_version = "2.2.5"
    // For Kotlin use kapt instead of annotationProcessor
    api "androidx.room:room-runtime:$room_version"
    // For Kotlin use kapt instead of annotationProcessor
    kapt "androidx.room:room-compiler:$room_version"
    api  rootProject.ext.dependencies.rxpermissions
    api  rootProject.ext.dependencies.rxjava
    api  rootProject.ext.dependencies.rxandroid
    api  rootProject.ext.dependencies.rxKotlin
}